import * as vscode from 'vscode';
// import getEditor from '../util/getEditor';

export default async function replaceDollars() {
    const editor = getEditor(true, true);
    if (!editor) return;

    const doc = editor.document;
    const text = doc.getText();

    if (text.match(/\${3,}/)) {
        vscode.window.showErrorMessage('Found three or more consecutive $ characters.');
        return;
    }

    let newText = text;
    let singleDollarIndex = 0;
    let doubleDollarIndex = 0;

    newText = newText.replace(/(?<!\$)\$(?!\$)/g, () => {
        singleDollarIndex++;
        return singleDollarIndex % 2 === 1 ? '\\(' : '\\)';
    });

    newText = newText.replace(/\$\$/g, () => {
        doubleDollarIndex++;
        return doubleDollarIndex % 2 === 1 ? '\\[' : '\\]';
    });

    if (singleDollarIndex % 2 !== 0 || doubleDollarIndex % 2 !== 0) {
        vscode.window.showErrorMessage('Found an odd number of $ or $$ characters.');
        return;
    }

    const newDoc = await vscode.workspace.openTextDocument({ content: newText, language: 'latex' });
    await vscode.commands.executeCommand('vscode.diff', doc.uri, newDoc.uri, 'Diff: Original vs Modified');

    const userResponsePromise = vscode.window.showInformationMessage(
        'Review the changes in the diff view. Do you want to apply these changes?',
        'Yes', 'No'
    );

    let isDiscarded = false;
    const closeListener = vscode.workspace.onDidCloseTextDocument((closedDoc) => {
        if (closedDoc === newDoc) {
            vscode.window.showInformationMessage('Changes discarded.');
            isDiscarded = true;
            closeListener.dispose();
        }
    });

    const userResponse = await userResponsePromise;

    if (!isDiscarded && userResponse === 'Yes') {
        const edit = new vscode.WorkspaceEdit();
        const fullRange = new vscode.Range(
            doc.positionAt(0),
            doc.positionAt(text.length)
        );
        edit.replace(doc.uri, fullRange, newText);
        await vscode.workspace.applyEdit(edit);
        vscode.window.showInformationMessage('Changes applied successfully.');
    } else {
        if (!isDiscarded) vscode.commands.executeCommand('workbench.action.closeActiveEditor');
        vscode.window.showInformationMessage('Changes discarded.');
    }

    closeListener.dispose();
}
